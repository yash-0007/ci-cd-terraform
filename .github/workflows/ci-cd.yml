name: ci-cd

on:
  push:
    branch:
      - main
  pull_request:
    branch:
      - main
  workflow_call:
    secrets:
      SSH_PRIVATE_KEY:
        required: true
      SSH_HOST:
        required: true
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup java
        uses: actions/setup-java@v3
        with:
          distribution: corretto
          java-version: 17
      - name: save ip to s3 bucket
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: 'us-east-1'
        run: |
          aws s3 cp s3://yash-ip-bucket ip.txt
          echo ip=$(cat ip.txt)
      - name: Test
        run: ./gradlew test

  build:
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup java
        uses: actions/setup-java@v3
        with:
          distribution: corretto
          java-version: 17
      - name: Build
        run: ./gradlew build
      - name: Copy jar file to artifacts
        uses: actions/upload-artifact@v3
        with:
          name: esop-trading-1.0
          path: build/libs/esop-trading-0.1-all.jar

  deploy:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Download jar
        uses: actions/download-artifact@v3
        with:
          name: esop-trading-1.0
      - name: Transfer artifact to EC2 instance
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
        run: |
          eval `ssh-agent`
          ssh-add - <<< "${SSH_PRIVATE_KEY}"
          scp -o StrictHostKeyChecking=no "deploy.sh" ec2-user@$SSH_HOST:~
          scp -o StrictHostKeyChecking=no "esop-trading-0.1-all.jar" ec2-user@$SSH_HOST:~
          ssh -o StrictHostKeyChecking=no ec2-user@$SSH_HOST -t "nohup sudo yum install java-17-amazon-corretto-headless -y"
          ssh -o StrictHostKeyChecking=no ec2-user@$SSH_HOST -t "nohup sudo sh deploy.sh"

